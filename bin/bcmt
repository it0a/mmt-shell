#!/bin/bash
#include
pushd `dirname $0` > /dev/null
SCRIPTPATH=`pwd -P`
popd > /dev/null
. $SCRIPTPATH/includes/colors
. $SCRIPTPATH/includes/pretty
. $SCRIPTPATH/includes/dbinit
. $SCRIPTPATH/includes/dumpMeta
. $SCRIPTPATH/includes/restMeta
. $SCRIPTPATH/dump.conf
. $SCRIPTPATH/includes/readConf
. $BCMT_DUMPDIR/bcmt.conf

#utility
display_usage() {
    tput bold
    echo -e "${COLOR_LIGHTCYAN}usage:${COLOR_WHITE} ${0##*/} [-h host] [-P port] [-u user] [-d] [-r] [database]${COLOR_NONE}"
    tput dim
    tput smso
    tput smul
    echo "flag;name;description;default"       | awk -F ';' '{printf "%-7s %-10s %-18s %-12s\n", $1, $2, $3, $4}'
    tput rmso
    tput rmul
    echo "-h;host;host of database;$BCMT_HOST" | awk -F ';' '{printf "%-7s %-10s %-18s %-12s\n", $1, $2, $3, $4}'
    echo "-P;port;port of database;$BCMT_PORT" | awk -F ';' '{printf "%-7s %-10s %-18s %-12s\n", $1, $2, $3, $4}'
    echo "-u;user;user of database;$BCMT_USER" | awk -F ';' '{printf "%-7s %-10s %-18s %-12s\n", $1, $2, $3, $4}'
    echo "-d;dump;from tables.conf;"           | awk -F ';' '{printf "%-7s %-10s %-18s %-12s\n", $1, $2, $3, $4}'
    echo "-r;restore;from tables.conf;"        | awk -F ';' '{printf "%-7s %-10s %-18s %-12s\n", $1, $2, $3, $4}'
    echo ""
    echo ";database;name of database;$BCMT_DBNAME" | awk -F ';' '{printf "%-7s %-10s %-18s %-12s\n", $1, $2, $3, $4}'
    echo ""
    tput smso
    echo -e "Create dump tables using values in bcmt.conf:"
    tput rmso
    tput bold
    echo "bcmt -d"
    tput sgr 0
    echo ""
    tput smso
    echo "Restore from dump tables to example_db:"
    tput rmso
    tput bold
    echo "bcmt -r example_db"
    tput sgr 0
    echo ""
    tput smso
    echo -e "Dumping from a remote database:"
    tput rmso
    tput bold
    echo "bcmt -h 10.0.8.190 -d example_remote_db"
    tput sgr 0
    echo ""
    tput smso
    echo -e "Restoring to a remote production database:"
    tput rmso
    tput bold
    echo "bcmt -h 130.31.233.159 -P 3308 -u prodUser -r example_prod_db"
    tput sgr 0
    exit 0
}
die() {
    echo "ERROR: $* - Aborting."
    exit 1
}
#initialize
[ -d $BCMT_DUMPDIR ] || die "Dump directory $BCMT_DUMPDIR cannot be found/does not exist (check dump.conf)"
BCMT_INITOK=false
BCMT_RESTORE=false
BCMT_DUMP=false
while getopts h:P:u:dr name
do
    case $name in
        #missing optarg
        :)
            display_usage
            ;;
        #host
        h)
            BCMT_HOST=$OPTARG
            ;;
        #Port
        P)
            BCMT_PORT=$OPTARG
            ;;
        #user
        u)
            BCMT_USER=$OPTARG
            ;;
        #dump
        d)
            $BCMT_RESTORE && die "Cannot dump and restore."
            BCMT_DUMP=true
            BCMT_INITOK=true
            ;;
        #restore
        r)
            $BCMT_DUMP && die "Cannot dump and restore."
            BCMT_RESTORE=true
            BCMT_INITOK=true
            ;;
    esac
done
shift $((OPTIND-1))
if [ $1 ]
then
    BCMT_DBNAME=$1
fi
if [ $BCMT_INITOK = true ]
then
    do_dbinit
    read_tables
    if [ $BCMT_DUMP = true ]
    then
        for table in "${BCMT_TABLES[@]}"; do dump_table $table; done
        done_status
    elif [ $BCMT_RESTORE = true ]
    then
        for table in ${BCMT_TABLES[@]}; do restore_table $table; done
        done_status
    else
        die "Invalid operation"
    fi
else
    display_usage
fi
