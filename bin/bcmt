#!/bin/bash
#include
pushd `dirname $0` > /dev/null
SCRIPTPATH=`pwd -P`
popd > /dev/null
. $SCRIPTPATH/includes/dbinit
. $SCRIPTPATH/includes/dumpMeta
. $SCRIPTPATH/includes/restMeta
. $SCRIPTPATH/includes/readConf
. $SCRIPTPATH/bcmt.conf
#utility
display_usage() {
    echo "usage: ${0##*/} [-h host] [-P port] [-u user] [-d] [-r] [database] (default: $BCMT_DBNAME)"
    echo "flag;name;description;default"              | awk -F ';' '{printf "%-7s %-10s %-25s %-12s\n", $1, $2, $3, $4}'
    echo "====;====;===========;======="              | awk -F ';' '{printf "%-7s %-10s %-25s %-12s\n", $1, $2, $3, $4}'
    echo "-h:;host;host of target database;$BCMT_HOST" | awk -F ';' '{printf "%-7s %-10s %-25s %-12s\n", $1, $2, $3, $4}'
    echo "-P:;port;port of target database;$BCMT_PORT"      | awk -F ';' '{printf "%-7s %-10s %-25s %-12s\n", $1, $2, $3, $4}'
    echo "-u:;user;user of target database;$BCMT_USER"      | awk -F ';' '{printf "%-7s %-10s %-25s %-12s\n", $1, $2, $3, $4}'
    echo "-d:;dump;dump tables;tables.conf"           | awk -F ';' '{printf "%-7s %-10s %-25s %-12s\n", $1, $2, $3, $4}'
    echo "-r:;restore;restore tables;tables.conf"     | awk -F ';' '{printf "%-7s %-10s %-25s %-12s\n", $1, $2, $3, $4}'
    echo ""
    echo "Create dump tables from example_db:"
    echo "bcmt -d example_db"
    echo ""
    echo "Restore from dump tables to example_db:"
    echo "bcmt -r example_db"
    echo ""
    echo "Dumping from a remote database:"
    echo "bcmt -h 10.0.8.190 -d example_remote_db"
    echo ""
    echo "Restoring to a remote production database"
    echo "bcmt -h 130.31.233.159 -P 3308 -u prodUser -r example_prod_db"
    exit 0
}
die() {
    echo "ERROR: $* - Aborting."
    exit 1
}
#initialize
BCMT_INITOK=false
BCMT_RESTORE=false
BCMT_DUMP=false
while getopts h:P:u:dr name
do
    case $name in
        #missing optarg
        :)
            display_usage
            ;;
        #host
        h)
            BCMT_HOST=$OPTARG
            ;;
        #Port
        P)
            BCMT_PORT=$OPTARG
            ;;
        #user
        u)
            BCMT_USER=$OPTARG
            ;;
        #dump
        d)
            $BCMT_RESTORE && die "Cannot dump and restore."
            BCMT_DUMP=true
            BCMT_INITOK=true
            ;;
        #restore
        r)
            $BCMT_DUMP && die "Cannot dump and restore."
            BCMT_RESTORE=true
            BCMT_INITOK=true
            ;;
        #invalid
        *)
            display_usage
            ;;
    esac
    shift
done
if [ $1 ]
then
    BCMT_DBNAME=$1
fi
if [ $BCMT_INITOK = true ]
then
    do_dbinit
    read_tables
    if [ $BCMT_DUMP = true ]
    then
        for table in "${BCMT_TABLES[@]}"; do dump_table $table; done
    elif [ $BCMT_RESTORE = true ]
    then
        for table in ${BCMT_TABLES[@]}; do restore_table $table; done
    else
        die "Invalid operation"
    fi
else
    display_usage
fi
